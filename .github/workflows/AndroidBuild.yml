# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Cache Gradle and Wrapper
        uses: actions/cache@v4
        with:
          path: | 
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Setup local.properties
        env:
          SERVERURL: ${{ secrets.SERVERURL }}
        run: |
            sed "s|SERVERURL|$SERVERURL|g;" local.defaults.properties > local.properties

      - name: Build project
        run: ./gradlew build -Dlint.baselines.continue=true

      - name: Run tests
        run: ./gradlew test

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mais1Venda.apk
          path: app/build/outputs/apk/debug/app-debug.apk
